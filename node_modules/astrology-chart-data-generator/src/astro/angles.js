import {
  calculateAscensionDegree,
  calculateInverseAxisPoint,
  convertToZodiacString,
} from "./utils";

const calcluateAscendant = ({ siderealTimeAngle, latitude, obliquity }) => {
  const degree = calculateAscensionDegree({
    xDeg: siderealTimeAngle,
    yDeg: latitude,
    zDeg: obliquity,
  });
  return {
    degree,
    zodiacDegree: convertToZodiacString(degree),
  };
};

const calculateMidheaven = ({ siderealTimeAngle, obliquity }) => {
  const degree = calculateAscensionDegree({
    xDeg: siderealTimeAngle - 90,
    yDeg: 0,
    zDeg: obliquity,
  });
  return {
    degree,
    zodiacDegree: convertToZodiacString(degree),
  };
};

const calcluateDescendant = (ascendantDegree) => {
  const degree = calculateInverseAxisPoint(ascendantDegree);
  return {
    degree,
    zodiacDegree: convertToZodiacString(degree),
  };
};

const calcluateLowerMidheaven = (midheavenDegree) => {
  const degree = calculateInverseAxisPoint(midheavenDegree);
  return {
    degree,
    zodiacDegree: convertToZodiacString(degree),
  };
};

export const calculateAngles = ({ siderealTimeAngle, latitude, obliquity }) => {
  const ascendant = calcluateAscendant({
    siderealTimeAngle,
    latitude,
    obliquity,
  });
  const midheaven = calculateMidheaven({
    siderealTimeAngle,
    obliquity,
  });

  const descendant = calcluateDescendant(ascendant.degree);
  const lowerMidheaven = calcluateLowerMidheaven(midheaven.degree);

  return {
    ascendant,
    midheaven,
    descendant,
    lowerMidheaven,
  };
};
