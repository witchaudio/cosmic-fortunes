import {
  degreesToRadians,
  normaliseDegree,
  radiansToDegrees,
} from "../utils/math";
import { SIGNS } from "./consts";

export const convertToZodiacString = (rawEclipticDegree) => {
  const eclipticDegree = normaliseDegree(rawEclipticDegree);
  const signIndex = Math.floor(Math.floor(eclipticDegree) / 30);
  const degree = eclipticDegree % 30;
  const minute = (degree - Math.floor(degree)) * 60;
  const seconds = (minute - Math.floor(minute)) * 60;
  return `${Math.floor(degree)}ยบ ${Math.floor(minute)}' ${Math.floor(
    seconds
  )}" ${SIGNS[signIndex]}`;
};

export const calculateAscensionDegree = ({ xDeg, yDeg, zDeg }) => {
  var x = degreesToRadians(xDeg);
  var y = degreesToRadians(yDeg);
  var z = degreesToRadians(zDeg);
  var g = Math.tan(y) * Math.sin(z) + Math.sin(x) * Math.cos(z);
  var h = 0;
  if (-g < 0) {
    h = 180;
  }
  var r = Math.atan(Math.cos(x) / -g);
  return normaliseDegree(radiansToDegrees(r) + h);
};

export const calculateInverseAxisPoint = ($degree) => {
  const inverseDegree = normaliseDegree($degree + 180);
  return inverseDegree;
};
